{"version":3,"sources":["components/layout/Footer.jsx","components/layout/Header.jsx","helpers/getMovies.js","hooks/useFetchMovies.jsx","components/movies/Image.jsx","components/movies/Movie.jsx","components/movies/ListMovies.jsx","App.jsx","index.jsx"],"names":["Footer","className","href","src","alt","Header","getMovies","category","a","process","url","imagesBaseUrl","fetch","resp","json","data","results","movies","map","id","title","poster_path","poster","useFetchMovies","useState","loading","error","state","setState","useEffect","then","catch","Image","Movie","ListMovies","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAceA,EAZA,kBACb,yBAAQC,UAAU,SAAlB,qBACU,mBAAGC,KAAK,qBAAR,0BADV,wBAEE,mBAAGA,KAAK,8BAAR,SACE,qBACEC,IAAI,qIACJC,IAAI,uBCJGC,EAFA,kBAAM,wBAAQJ,UAAU,SAAlB,4B,qCCuBNK,EAxBA,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,4DACD,gCAEAC,mCAETC,EALU,UACD,gCADC,iBAKcH,EALd,oBAGDE,mCAHC,mBAOVE,EAPU,4CASGC,MAAMF,GATT,cASVG,EATU,gBAWGA,EAAKC,OAXR,cAWVC,EAXU,OAaRC,EAAYD,EAAZC,QAEFC,EAASD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,MAAiC,CAC1DF,KACAC,QACAE,OAAO,GAAD,OAAKX,GAAL,OAAqBU,OAlBb,kBAqBTJ,GArBS,4CAAH,sDC6BAM,EA3BQ,SAAChB,GAAc,IAAD,EACTiB,mBAAS,CACjCP,OAAQ,GACRQ,SAAS,EACTC,OAAO,IAJ0B,mBAC5BC,EAD4B,KACrBC,EADqB,KAwBnC,OAjBAC,qBAAU,WACRvB,EAAUC,GACPuB,MAAK,SAACb,GACLW,EAAS,2BACJD,GADG,IAENV,SACAQ,SAAS,QAGZM,OAAM,kBACLH,EAAS,2BACJD,GADG,IAEND,OAAO,UAGZ,CAACnB,IAEGoB,GCtBMK,EAFD,SAAC,GAAD,IAAGtB,EAAH,EAAGA,IAAKN,EAAR,EAAQA,IAAR,OAAkB,qBAAKH,UAAU,QAAQE,IAAKO,EAAKN,IAAKA,KCYvD6B,EAXD,SAAC,GAAD,IAAGd,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOE,EAAd,EAAcA,OAAd,OACZ,sBAAKrB,UAAU,QAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAOS,IAAKY,EAAQlB,IAAKgB,MAE3B,qBAAKnB,UAAU,eAAekB,GAAIA,EAAlC,SACGC,QCKQc,EAXI,SAAC,GAAD,IAAGjB,EAAH,EAAGA,OAAH,OACjB,sBAAKhB,UAAU,aAAf,UACE,qBAAKA,UAAU,oBAAf,4BACCgB,EAAOC,KAAI,gBAAGE,EAAH,EAAGA,MAAOD,EAAV,EAAUA,GAAIG,EAAd,EAAcA,OAAd,OACV,cAAC,EAAD,CAAOF,MAAOA,EAAOD,GAAIA,EAAaG,OAAQA,GAAZH,UCoBzBgB,MArBf,WACE,IADa,EAGsBZ,EAFlB,WAETN,EAHK,EAGLA,OAAQQ,EAHH,EAGGA,QAASC,EAHZ,EAGYA,MAEzB,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,IACCwB,IAAYC,EACX,qBAAKzB,UAAU,UAAf,+BAEA,cAAC,EAAD,CAAYgB,OAAQA,IAGrBS,GAAS,qBAAKzB,UAAU,QAAf,kCAEV,cAAC,EAAD,QCnBNmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c70d8189.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"Footer\">\n    Code by <a href=\"https://github.com\">Haron Acosta</a>. Movies content from\n    <a href=\"https://www.themoviedb.org/\">\n      <img\n        src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_1-5bdc75aaebeb75dc7ae79426ddd9be3b2be1e342510f8202baf6bffa71d7f5c4.svg\"\n        alt=\"The Movie DB\"\n      />\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\n\nconst Header = () => <header className=\"header\">The Movie App</header>;\n\nexport default Header;\n","/* eslint-disable camelcase */\nconst getMovies = async (category) => {\n  const apiUrl = 'https://api.themoviedb.org/3/';\n\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  const url = `${apiUrl}movie/${category}?api_key=${apiKey}&language=en-US`;\n\n  const imagesBaseUrl = `https://image.tmdb.org/t/p/w500/`;\n\n  const resp = await fetch(url);\n\n  const data = await resp.json();\n\n  const { results } = data;\n\n  const movies = results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: `${imagesBaseUrl}${poster_path}`,\n  }));\n\n  return movies;\n};\n\nexport default getMovies;\n","import { useEffect, useState } from 'react';\nimport getMovies from '../helpers/getMovies';\n\nconst useFetchMovies = (category) => {\n  const [state, setState] = useState({\n    movies: [],\n    loading: true,\n    error: false,\n  });\n\n  useEffect(() => {\n    getMovies(category)\n      .then((movies) => {\n        setState({\n          ...state,\n          movies,\n          loading: false,\n        });\n      })\n      .catch(() =>\n        setState({\n          ...state,\n          error: true,\n        })\n      );\n  }, [category]);\n\n  return state;\n};\n\nexport default useFetchMovies;\n","import React from 'react';\n\n// eslint-disable-next-line react/prop-types\nconst Image = ({ url, alt }) => <img className=\"image\" src={url} alt={alt} />;\n\nexport default Image;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Image from './Image';\n\nconst Movie = ({ id, title, poster }) => (\n  <div className=\"Movie\">\n    <div className=\"Movie__image\">\n      <Image url={poster} alt={title} />\n    </div>\n    <div className=\"Movie__title\" id={id}>\n      {title}\n    </div>\n  </div>\n);\n\nexport default Movie;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Movie from './Movie';\n\nconst ListMovies = ({ movies }) => (\n  <div className=\"ListMovies\">\n    <div className=\"ListMovies__title\">POPULAR MOVIES</div>\n    {movies.map(({ title, id, poster }) => (\n      <Movie title={title} id={id} key={id} poster={poster} />\n    ))}\n  </div>\n);\n\nListMovies.propTypes = {};\n\nexport default ListMovies;\n","import React from 'react';\nimport './assets/scss/app.scss';\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport useFetchMovies from './hooks/useFetchMovies';\nimport ListMovies from './components/movies/ListMovies';\n\nfunction App() {\n  const category = 'popular';\n\n  const { movies, loading, error } = useFetchMovies(category);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {loading && !error ? (\n        <div className=\"Loading\">Loading movies...</div>\n      ) : (\n        <ListMovies movies={movies} />\n      )}\n\n      {error && <div className=\"error\">Error, please reload</div>}\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}